/**
 * Tradeshift Tasks
 * This is a sample for swagger-maven-plugin
 *
 * OpenAPI spec version: v1
 * Contact: jba@tradeshift.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.ExternalTaskDTO;
import io.swagger.client.model.TaskDTO;
import org.junit.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * Marks a task as completed, setting the provided outcome
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void completeTaskTest() throws ApiException {
        String taskId = null;
        String outcome = null;
        String completedBy = null;
        // api.completeTask(taskId, outcome, completedBy);

        // TODO: test validations
    }
    
    /**
     * Create a Task
     *
     * Create a task. The handler and assignees params are mandatory, all other parameters are optional. if the assigner field is not provided, the currently logged-in user will be set as the task&#39;s assigner
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createTaskTest() throws ApiException {
        ExternalTaskDTO externalTaskDTO = null;
        // ExternalTaskDTO response = api.createTask(externalTaskDTO);

        // TODO: test validations
    }
    
    /**
     * Delete an Existing Task
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteTaskTest() throws ApiException {
        String taskId = null;
        // ExternalTaskDTO response = api.deleteTask(taskId);

        // TODO: test validations
    }
    
    /**
     * Fetches the task with the provided ID
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTaskTest() throws ApiException {
        String taskId = null;
        // api.getTask(taskId);

        // TODO: test validations
    }
    
    /**
     * Get a list of task counts for an account
     *
     * Returns a map of task groups and counts in each group
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTaskCountsTest() throws ApiException {
        String handler = null;
        String state = null;
        // Map<String, Object> response = api.getTaskCounts(handler, state);

        // TODO: test validations
    }
    
    /**
     * Fetches all tasks the user has access to and lets page through them
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getTasksTest() throws ApiException {
        String handler = null;
        String subjectId = null;
        String state = null;
        String assignee = null;
        Integer limit = null;
        Integer page = null;
        // List<ExternalTaskDTO> response = api.getTasks(handler, subjectId, state, assignee, limit, page);

        // TODO: test validations
    }
    
    /**
     * Update Task
     *
     * 
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateTaskTest() throws ApiException {
        String taskId = null;
        // TaskDTO response = api.updateTask(taskId);

        // TODO: test validations
    }
    
}
